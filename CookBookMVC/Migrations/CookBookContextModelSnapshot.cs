// <auto-generated />
using CookBookMVC.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CookBookMVC.Migrations
{
    [DbContext(typeof(CookBookContext))]
    partial class CookBookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CookBookMVC.Models.ImageModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ImageName")
                        .HasColumnType("text");

                    b.Property<string>("IngredientModelId")
                        .HasColumnType("text");

                    b.Property<string>("RecepieId")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IngredientModelId");

                    b.HasIndex("RecepieId");

                    b.ToTable("ImageModels");
                });

            modelBuilder.Entity("CookBookMVC.Models.IngredientModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Energy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .HasColumnType("text");

                    b.Property<string>("RecipeModelId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RecipeModelId");

                    b.ToTable("IngredientModels");
                });

            modelBuilder.Entity("CookBookMVC.Models.RecipeModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecipeModels");
                });

            modelBuilder.Entity("CookBookMVC.Models.ImageModel", b =>
                {
                    b.HasOne("CookBookMVC.Models.IngredientModel", null)
                        .WithMany("Images")
                        .HasForeignKey("IngredientModelId");

                    b.HasOne("CookBookMVC.Models.RecipeModel", "Recepie")
                        .WithMany()
                        .HasForeignKey("RecepieId");
                });

            modelBuilder.Entity("CookBookMVC.Models.IngredientModel", b =>
                {
                    b.HasOne("CookBookMVC.Models.RecipeModel", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
